// Copyright 2024 Grabtaxi Holdings PTE LTE (GRAB), All rights reserved.
// Use of this source code is governed by an MIT-style license that can be found in the LICENSE file

/*
GrabFood

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grabfood

import (
	"encoding/json"
)

// checks if the UpdateCampaignRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCampaignRequest{}

// UpdateCampaignRequest This request updates a campaign for your GrabFood store. 
type UpdateCampaignRequest struct {
	// The merchant's ID that is in GrabFood's database.
	MerchantID *string `json:"merchantID,omitempty"`
	// The campaign's name.
	Name *string `json:"name,omitempty"`
	Quotas *CampaignQuotas `json:"quotas,omitempty"`
	Conditions *CampaignConditions `json:"conditions,omitempty"`
	Discount *CampaignDiscount `json:"discount,omitempty"`
	// Specify the tag for custom bundle offer campaign. Only whitelisted partner is supported as of now.
	CustomTag *string `json:"customTag,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateCampaignRequest UpdateCampaignRequest

// NewUpdateCampaignRequest instantiates a new UpdateCampaignRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCampaignRequest() *UpdateCampaignRequest {
	this := UpdateCampaignRequest{}
	return &this
}

// NewUpdateCampaignRequestWithDefaults instantiates a new UpdateCampaignRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCampaignRequestWithDefaults() *UpdateCampaignRequest {
	this := UpdateCampaignRequest{}
	return &this
}

// GetMerchantID returns the MerchantID field value if set, zero value otherwise.
func (o *UpdateCampaignRequest) GetMerchantID() string {
	if o == nil || IsNil(o.MerchantID) {
		var ret string
		return ret
	}
	return *o.MerchantID
}

// GetMerchantIDOk returns a tuple with the MerchantID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCampaignRequest) GetMerchantIDOk() (*string, bool) {
	if o == nil || IsNil(o.MerchantID) {
		return nil, false
	}
	return o.MerchantID, true
}

// HasMerchantID returns a boolean if a field has been set.
func (o *UpdateCampaignRequest) HasMerchantID() bool {
	if o != nil && !IsNil(o.MerchantID) {
		return true
	}

	return false
}

// SetMerchantID gets a reference to the given string and assigns it to the MerchantID field.
func (o *UpdateCampaignRequest) SetMerchantID(v string) {
	o.MerchantID = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateCampaignRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCampaignRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateCampaignRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateCampaignRequest) SetName(v string) {
	o.Name = &v
}

// GetQuotas returns the Quotas field value if set, zero value otherwise.
func (o *UpdateCampaignRequest) GetQuotas() CampaignQuotas {
	if o == nil || IsNil(o.Quotas) {
		var ret CampaignQuotas
		return ret
	}
	return *o.Quotas
}

// GetQuotasOk returns a tuple with the Quotas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCampaignRequest) GetQuotasOk() (*CampaignQuotas, bool) {
	if o == nil || IsNil(o.Quotas) {
		return nil, false
	}
	return o.Quotas, true
}

// HasQuotas returns a boolean if a field has been set.
func (o *UpdateCampaignRequest) HasQuotas() bool {
	if o != nil && !IsNil(o.Quotas) {
		return true
	}

	return false
}

// SetQuotas gets a reference to the given CampaignQuotas and assigns it to the Quotas field.
func (o *UpdateCampaignRequest) SetQuotas(v CampaignQuotas) {
	o.Quotas = &v
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *UpdateCampaignRequest) GetConditions() CampaignConditions {
	if o == nil || IsNil(o.Conditions) {
		var ret CampaignConditions
		return ret
	}
	return *o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCampaignRequest) GetConditionsOk() (*CampaignConditions, bool) {
	if o == nil || IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *UpdateCampaignRequest) HasConditions() bool {
	if o != nil && !IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given CampaignConditions and assigns it to the Conditions field.
func (o *UpdateCampaignRequest) SetConditions(v CampaignConditions) {
	o.Conditions = &v
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *UpdateCampaignRequest) GetDiscount() CampaignDiscount {
	if o == nil || IsNil(o.Discount) {
		var ret CampaignDiscount
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCampaignRequest) GetDiscountOk() (*CampaignDiscount, bool) {
	if o == nil || IsNil(o.Discount) {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *UpdateCampaignRequest) HasDiscount() bool {
	if o != nil && !IsNil(o.Discount) {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given CampaignDiscount and assigns it to the Discount field.
func (o *UpdateCampaignRequest) SetDiscount(v CampaignDiscount) {
	o.Discount = &v
}

// GetCustomTag returns the CustomTag field value if set, zero value otherwise.
func (o *UpdateCampaignRequest) GetCustomTag() string {
	if o == nil || IsNil(o.CustomTag) {
		var ret string
		return ret
	}
	return *o.CustomTag
}

// GetCustomTagOk returns a tuple with the CustomTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCampaignRequest) GetCustomTagOk() (*string, bool) {
	if o == nil || IsNil(o.CustomTag) {
		return nil, false
	}
	return o.CustomTag, true
}

// HasCustomTag returns a boolean if a field has been set.
func (o *UpdateCampaignRequest) HasCustomTag() bool {
	if o != nil && !IsNil(o.CustomTag) {
		return true
	}

	return false
}

// SetCustomTag gets a reference to the given string and assigns it to the CustomTag field.
func (o *UpdateCampaignRequest) SetCustomTag(v string) {
	o.CustomTag = &v
}

func (o UpdateCampaignRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCampaignRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MerchantID) {
		toSerialize["merchantID"] = o.MerchantID
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Quotas) {
		toSerialize["quotas"] = o.Quotas
	}
	if !IsNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	if !IsNil(o.Discount) {
		toSerialize["discount"] = o.Discount
	}
	if !IsNil(o.CustomTag) {
		toSerialize["customTag"] = o.CustomTag
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateCampaignRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateCampaignRequest := _UpdateCampaignRequest{}

	err = json.Unmarshal(data, &varUpdateCampaignRequest)

	if err != nil {
		return err
	}

	*o = UpdateCampaignRequest(varUpdateCampaignRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "merchantID")
		delete(additionalProperties, "name")
		delete(additionalProperties, "quotas")
		delete(additionalProperties, "conditions")
		delete(additionalProperties, "discount")
		delete(additionalProperties, "customTag")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateCampaignRequest struct {
	value *UpdateCampaignRequest
	isSet bool
}

func (v NullableUpdateCampaignRequest) Get() *UpdateCampaignRequest {
	return v.value
}

func (v *NullableUpdateCampaignRequest) Set(val *UpdateCampaignRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCampaignRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCampaignRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCampaignRequest(val *UpdateCampaignRequest) *NullableUpdateCampaignRequest {
	return &NullableUpdateCampaignRequest{value: val, isSet: true}
}

func (v NullableUpdateCampaignRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCampaignRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


