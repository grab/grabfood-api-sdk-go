// Copyright 2024 Grabtaxi Holdings PTE LTE (GRAB), All rights reserved.
// Use of this source code is governed by an MIT-style license that can be found in the LICENSE file

/*
GrabFood

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grabfood

import (
	"encoding/json"
)

// checks if the RedeemDineInVoucherResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RedeemDineInVoucherResponse{}

// RedeemDineInVoucherResponse 
type RedeemDineInVoucherResponse struct {
	// This certificateID is decoded from scanning the QR code, and 1:1 mapping with `voucherCode`.
	CertificateID *string `json:"certificateID,omitempty"`
	// A short code for the dine-in voucher purchased by the user.
	VoucherCode *string `json:"voucherCode,omitempty"`
	Voucher *Voucher `json:"voucher,omitempty"`
	RedeemResult *RedeemResult `json:"redeemResult,omitempty"`
	// The merchant's ID that is in GrabFood's database.
	MerchantID *string `json:"merchantID,omitempty"`
	// The dine-in voucher campaign's ID in GrabFood's database.
	CampaignID *string `json:"campaignID,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RedeemDineInVoucherResponse RedeemDineInVoucherResponse

// NewRedeemDineInVoucherResponse instantiates a new RedeemDineInVoucherResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRedeemDineInVoucherResponse() *RedeemDineInVoucherResponse {
	this := RedeemDineInVoucherResponse{}
	return &this
}

// NewRedeemDineInVoucherResponseWithDefaults instantiates a new RedeemDineInVoucherResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRedeemDineInVoucherResponseWithDefaults() *RedeemDineInVoucherResponse {
	this := RedeemDineInVoucherResponse{}
	return &this
}

// GetCertificateID returns the CertificateID field value if set, zero value otherwise.
func (o *RedeemDineInVoucherResponse) GetCertificateID() string {
	if o == nil || IsNil(o.CertificateID) {
		var ret string
		return ret
	}
	return *o.CertificateID
}

// GetCertificateIDOk returns a tuple with the CertificateID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedeemDineInVoucherResponse) GetCertificateIDOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateID) {
		return nil, false
	}
	return o.CertificateID, true
}

// HasCertificateID returns a boolean if a field has been set.
func (o *RedeemDineInVoucherResponse) HasCertificateID() bool {
	if o != nil && !IsNil(o.CertificateID) {
		return true
	}

	return false
}

// SetCertificateID gets a reference to the given string and assigns it to the CertificateID field.
func (o *RedeemDineInVoucherResponse) SetCertificateID(v string) {
	o.CertificateID = &v
}

// GetVoucherCode returns the VoucherCode field value if set, zero value otherwise.
func (o *RedeemDineInVoucherResponse) GetVoucherCode() string {
	if o == nil || IsNil(o.VoucherCode) {
		var ret string
		return ret
	}
	return *o.VoucherCode
}

// GetVoucherCodeOk returns a tuple with the VoucherCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedeemDineInVoucherResponse) GetVoucherCodeOk() (*string, bool) {
	if o == nil || IsNil(o.VoucherCode) {
		return nil, false
	}
	return o.VoucherCode, true
}

// HasVoucherCode returns a boolean if a field has been set.
func (o *RedeemDineInVoucherResponse) HasVoucherCode() bool {
	if o != nil && !IsNil(o.VoucherCode) {
		return true
	}

	return false
}

// SetVoucherCode gets a reference to the given string and assigns it to the VoucherCode field.
func (o *RedeemDineInVoucherResponse) SetVoucherCode(v string) {
	o.VoucherCode = &v
}

// GetVoucher returns the Voucher field value if set, zero value otherwise.
func (o *RedeemDineInVoucherResponse) GetVoucher() Voucher {
	if o == nil || IsNil(o.Voucher) {
		var ret Voucher
		return ret
	}
	return *o.Voucher
}

// GetVoucherOk returns a tuple with the Voucher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedeemDineInVoucherResponse) GetVoucherOk() (*Voucher, bool) {
	if o == nil || IsNil(o.Voucher) {
		return nil, false
	}
	return o.Voucher, true
}

// HasVoucher returns a boolean if a field has been set.
func (o *RedeemDineInVoucherResponse) HasVoucher() bool {
	if o != nil && !IsNil(o.Voucher) {
		return true
	}

	return false
}

// SetVoucher gets a reference to the given Voucher and assigns it to the Voucher field.
func (o *RedeemDineInVoucherResponse) SetVoucher(v Voucher) {
	o.Voucher = &v
}

// GetRedeemResult returns the RedeemResult field value if set, zero value otherwise.
func (o *RedeemDineInVoucherResponse) GetRedeemResult() RedeemResult {
	if o == nil || IsNil(o.RedeemResult) {
		var ret RedeemResult
		return ret
	}
	return *o.RedeemResult
}

// GetRedeemResultOk returns a tuple with the RedeemResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedeemDineInVoucherResponse) GetRedeemResultOk() (*RedeemResult, bool) {
	if o == nil || IsNil(o.RedeemResult) {
		return nil, false
	}
	return o.RedeemResult, true
}

// HasRedeemResult returns a boolean if a field has been set.
func (o *RedeemDineInVoucherResponse) HasRedeemResult() bool {
	if o != nil && !IsNil(o.RedeemResult) {
		return true
	}

	return false
}

// SetRedeemResult gets a reference to the given RedeemResult and assigns it to the RedeemResult field.
func (o *RedeemDineInVoucherResponse) SetRedeemResult(v RedeemResult) {
	o.RedeemResult = &v
}

// GetMerchantID returns the MerchantID field value if set, zero value otherwise.
func (o *RedeemDineInVoucherResponse) GetMerchantID() string {
	if o == nil || IsNil(o.MerchantID) {
		var ret string
		return ret
	}
	return *o.MerchantID
}

// GetMerchantIDOk returns a tuple with the MerchantID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedeemDineInVoucherResponse) GetMerchantIDOk() (*string, bool) {
	if o == nil || IsNil(o.MerchantID) {
		return nil, false
	}
	return o.MerchantID, true
}

// HasMerchantID returns a boolean if a field has been set.
func (o *RedeemDineInVoucherResponse) HasMerchantID() bool {
	if o != nil && !IsNil(o.MerchantID) {
		return true
	}

	return false
}

// SetMerchantID gets a reference to the given string and assigns it to the MerchantID field.
func (o *RedeemDineInVoucherResponse) SetMerchantID(v string) {
	o.MerchantID = &v
}

// GetCampaignID returns the CampaignID field value if set, zero value otherwise.
func (o *RedeemDineInVoucherResponse) GetCampaignID() string {
	if o == nil || IsNil(o.CampaignID) {
		var ret string
		return ret
	}
	return *o.CampaignID
}

// GetCampaignIDOk returns a tuple with the CampaignID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedeemDineInVoucherResponse) GetCampaignIDOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignID) {
		return nil, false
	}
	return o.CampaignID, true
}

// HasCampaignID returns a boolean if a field has been set.
func (o *RedeemDineInVoucherResponse) HasCampaignID() bool {
	if o != nil && !IsNil(o.CampaignID) {
		return true
	}

	return false
}

// SetCampaignID gets a reference to the given string and assigns it to the CampaignID field.
func (o *RedeemDineInVoucherResponse) SetCampaignID(v string) {
	o.CampaignID = &v
}

func (o RedeemDineInVoucherResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RedeemDineInVoucherResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CertificateID) {
		toSerialize["certificateID"] = o.CertificateID
	}
	if !IsNil(o.VoucherCode) {
		toSerialize["voucherCode"] = o.VoucherCode
	}
	if !IsNil(o.Voucher) {
		toSerialize["voucher"] = o.Voucher
	}
	if !IsNil(o.RedeemResult) {
		toSerialize["redeemResult"] = o.RedeemResult
	}
	if !IsNil(o.MerchantID) {
		toSerialize["merchantID"] = o.MerchantID
	}
	if !IsNil(o.CampaignID) {
		toSerialize["campaignID"] = o.CampaignID
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RedeemDineInVoucherResponse) UnmarshalJSON(data []byte) (err error) {
	varRedeemDineInVoucherResponse := _RedeemDineInVoucherResponse{}

	err = json.Unmarshal(data, &varRedeemDineInVoucherResponse)

	if err != nil {
		return err
	}

	*o = RedeemDineInVoucherResponse(varRedeemDineInVoucherResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "certificateID")
		delete(additionalProperties, "voucherCode")
		delete(additionalProperties, "voucher")
		delete(additionalProperties, "redeemResult")
		delete(additionalProperties, "merchantID")
		delete(additionalProperties, "campaignID")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRedeemDineInVoucherResponse struct {
	value *RedeemDineInVoucherResponse
	isSet bool
}

func (v NullableRedeemDineInVoucherResponse) Get() *RedeemDineInVoucherResponse {
	return v.value
}

func (v *NullableRedeemDineInVoucherResponse) Set(val *RedeemDineInVoucherResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRedeemDineInVoucherResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRedeemDineInVoucherResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRedeemDineInVoucherResponse(val *RedeemDineInVoucherResponse) *NullableRedeemDineInVoucherResponse {
	return &NullableRedeemDineInVoucherResponse{value: val, isSet: true}
}

func (v NullableRedeemDineInVoucherResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRedeemDineInVoucherResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


