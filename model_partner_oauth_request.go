// Copyright 2024 Grabtaxi Holdings PTE LTE (GRAB), All rights reserved.
// Use of this source code is governed by an MIT-style license that can be found in the LICENSE file

/*
GrabFood

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grabfood

import (
	"encoding/json"
	"fmt"
)

// checks if the PartnerOauthRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PartnerOauthRequest{}

// PartnerOauthRequest Information about GrabFood getting an OAuth access token from partners. 
type PartnerOauthRequest struct {
	// The client identifier issued to obtain the OAuth access token.
	ClientId string `json:"client_id"`
	// The client secret issued to obtain the OAuth access token.
	ClientSecret string `json:"client_secret"`
	// Refers to the way an application gets OAuth access token.
	GrantType string `json:"grant_type"`
	// A space delimited list of partner scopes.
	Scope *string `json:"scope,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PartnerOauthRequest PartnerOauthRequest

// NewPartnerOauthRequest instantiates a new PartnerOauthRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartnerOauthRequest(clientId string, clientSecret string, grantType string) *PartnerOauthRequest {
	this := PartnerOauthRequest{}
	this.ClientId = clientId
	this.ClientSecret = clientSecret
	this.GrantType = grantType
	return &this
}

// NewPartnerOauthRequestWithDefaults instantiates a new PartnerOauthRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartnerOauthRequestWithDefaults() *PartnerOauthRequest {
	this := PartnerOauthRequest{}
	return &this
}

// GetClientId returns the ClientId field value
func (o *PartnerOauthRequest) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *PartnerOauthRequest) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *PartnerOauthRequest) SetClientId(v string) {
	o.ClientId = v
}

// GetClientSecret returns the ClientSecret field value
func (o *PartnerOauthRequest) GetClientSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value
// and a boolean to check if the value has been set.
func (o *PartnerOauthRequest) GetClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientSecret, true
}

// SetClientSecret sets field value
func (o *PartnerOauthRequest) SetClientSecret(v string) {
	o.ClientSecret = v
}

// GetGrantType returns the GrantType field value
func (o *PartnerOauthRequest) GetGrantType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GrantType
}

// GetGrantTypeOk returns a tuple with the GrantType field value
// and a boolean to check if the value has been set.
func (o *PartnerOauthRequest) GetGrantTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GrantType, true
}

// SetGrantType sets field value
func (o *PartnerOauthRequest) SetGrantType(v string) {
	o.GrantType = v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *PartnerOauthRequest) GetScope() string {
	if o == nil || IsNil(o.Scope) {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerOauthRequest) GetScopeOk() (*string, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *PartnerOauthRequest) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *PartnerOauthRequest) SetScope(v string) {
	o.Scope = &v
}

func (o PartnerOauthRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PartnerOauthRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["client_id"] = o.ClientId
	toSerialize["client_secret"] = o.ClientSecret
	toSerialize["grant_type"] = o.GrantType
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PartnerOauthRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"client_id",
		"client_secret",
		"grant_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPartnerOauthRequest := _PartnerOauthRequest{}

	err = json.Unmarshal(data, &varPartnerOauthRequest)

	if err != nil {
		return err
	}

	*o = PartnerOauthRequest(varPartnerOauthRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "client_id")
		delete(additionalProperties, "client_secret")
		delete(additionalProperties, "grant_type")
		delete(additionalProperties, "scope")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePartnerOauthRequest struct {
	value *PartnerOauthRequest
	isSet bool
}

func (v NullablePartnerOauthRequest) Get() *PartnerOauthRequest {
	return v.value
}

func (v *NullablePartnerOauthRequest) Set(val *PartnerOauthRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePartnerOauthRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePartnerOauthRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartnerOauthRequest(val *PartnerOauthRequest) *NullablePartnerOauthRequest {
	return &NullablePartnerOauthRequest{value: val, isSet: true}
}

func (v NullablePartnerOauthRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartnerOauthRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


