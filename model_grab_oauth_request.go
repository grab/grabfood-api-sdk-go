// Copyright 2024 Grabtaxi Holdings PTE LTE (GRAB), All rights reserved.
// Use of this source code is governed by an MIT-style license that can be found in the LICENSE file

/*
GrabFood

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grabfood

import (
	"encoding/json"
	"fmt"
)

// checks if the GrabOauthRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GrabOauthRequest{}

// GrabOauthRequest Information about the GrabFood client getting an OAuth 2.0 access token from partners. 
type GrabOauthRequest struct {
	// The client identifier issued to the client to obtain the OAuth 2.0 access_token.
	ClientId string `json:"client_id"`
	// The client secret issued to the client to obtain the OAuth 2.0 access_token.
	ClientSecret string `json:"client_secret"`
	// The grant type for the client to obtain the OAuth 2.0 access_token.
	GrantType string `json:"grant_type"`
	// The scope for the client to obtain the OAuth 2.0 access_token.
	Scope string `json:"scope"`
	AdditionalProperties map[string]interface{}
}

type _GrabOauthRequest GrabOauthRequest

// NewGrabOauthRequest instantiates a new GrabOauthRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGrabOauthRequest(clientId string, clientSecret string, grantType string, scope string) *GrabOauthRequest {
	this := GrabOauthRequest{}
	this.ClientId = clientId
	this.ClientSecret = clientSecret
	this.GrantType = grantType
	this.Scope = scope
	return &this
}

// NewGrabOauthRequestWithDefaults instantiates a new GrabOauthRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGrabOauthRequestWithDefaults() *GrabOauthRequest {
	this := GrabOauthRequest{}
	return &this
}

// GetClientId returns the ClientId field value
func (o *GrabOauthRequest) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *GrabOauthRequest) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *GrabOauthRequest) SetClientId(v string) {
	o.ClientId = v
}

// GetClientSecret returns the ClientSecret field value
func (o *GrabOauthRequest) GetClientSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value
// and a boolean to check if the value has been set.
func (o *GrabOauthRequest) GetClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientSecret, true
}

// SetClientSecret sets field value
func (o *GrabOauthRequest) SetClientSecret(v string) {
	o.ClientSecret = v
}

// GetGrantType returns the GrantType field value
func (o *GrabOauthRequest) GetGrantType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GrantType
}

// GetGrantTypeOk returns a tuple with the GrantType field value
// and a boolean to check if the value has been set.
func (o *GrabOauthRequest) GetGrantTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GrantType, true
}

// SetGrantType sets field value
func (o *GrabOauthRequest) SetGrantType(v string) {
	o.GrantType = v
}

// GetScope returns the Scope field value
func (o *GrabOauthRequest) GetScope() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value
// and a boolean to check if the value has been set.
func (o *GrabOauthRequest) GetScopeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Scope, true
}

// SetScope sets field value
func (o *GrabOauthRequest) SetScope(v string) {
	o.Scope = v
}

func (o GrabOauthRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GrabOauthRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["client_id"] = o.ClientId
	toSerialize["client_secret"] = o.ClientSecret
	toSerialize["grant_type"] = o.GrantType
	toSerialize["scope"] = o.Scope

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GrabOauthRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"client_id",
		"client_secret",
		"grant_type",
		"scope",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGrabOauthRequest := _GrabOauthRequest{}

	err = json.Unmarshal(data, &varGrabOauthRequest)

	if err != nil {
		return err
	}

	*o = GrabOauthRequest(varGrabOauthRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "client_id")
		delete(additionalProperties, "client_secret")
		delete(additionalProperties, "grant_type")
		delete(additionalProperties, "scope")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGrabOauthRequest struct {
	value *GrabOauthRequest
	isSet bool
}

func (v NullableGrabOauthRequest) Get() *GrabOauthRequest {
	return v.value
}

func (v *NullableGrabOauthRequest) Set(val *GrabOauthRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGrabOauthRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGrabOauthRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGrabOauthRequest(val *GrabOauthRequest) *NullableGrabOauthRequest {
	return &NullableGrabOauthRequest{value: val, isSet: true}
}

func (v NullableGrabOauthRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGrabOauthRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


