// Copyright 2024 Grabtaxi Holdings PTE LTE (GRAB), All rights reserved.
// Use of this source code is governed by an MIT-style license that can be found in the LICENSE file

/*
GrabFood

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grabfood

import (
	"encoding/json"
)

// checks if the MenuSyncWebhookRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MenuSyncWebhookRequest{}

// MenuSyncWebhookRequest This request pushes the state of a menu sync operation. 
type MenuSyncWebhookRequest struct {
	// An universally unique identifier (UUID) string. Used to uniquely identify a webhook request. Partners should use this value to distinguish between different webhook requests. If two requests contain the same requestID, only the first request should be considered and later requests **must** be ignored or discarded. 
	RequestID *string `json:"requestID,omitempty"`
	// The merchant's ID that is in GrabFood's database.
	MerchantID *string `json:"merchantID,omitempty"`
	// The merchant's ID that is on the partner's database.
	PartnerMerchantID *string `json:"partnerMerchantID,omitempty"`
	// An UUID string. Uniquely identifies a menu sync job. This can be found from the [Menu Update Notification](#tag/update-menu-noti) API response header. 
	JobID *string `json:"jobID,omitempty"`
	// Indicates the time of menu sync status change. This is based on ISO_8601/RFC3339. For example: `2022-07-29T15:55:59Z`. 
	UpdatedAt *string `json:"updatedAt,omitempty"`
	// Indicates the state of the menu sync job.
	Status *string `json:"status,omitempty"`
	// A string array of errors that occurred during processing. This array is empty if the status is not `FAILED`.
	Errors []string `json:"errors,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MenuSyncWebhookRequest MenuSyncWebhookRequest

// NewMenuSyncWebhookRequest instantiates a new MenuSyncWebhookRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMenuSyncWebhookRequest() *MenuSyncWebhookRequest {
	this := MenuSyncWebhookRequest{}
	return &this
}

// NewMenuSyncWebhookRequestWithDefaults instantiates a new MenuSyncWebhookRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMenuSyncWebhookRequestWithDefaults() *MenuSyncWebhookRequest {
	this := MenuSyncWebhookRequest{}
	return &this
}

// GetRequestID returns the RequestID field value if set, zero value otherwise.
func (o *MenuSyncWebhookRequest) GetRequestID() string {
	if o == nil || IsNil(o.RequestID) {
		var ret string
		return ret
	}
	return *o.RequestID
}

// GetRequestIDOk returns a tuple with the RequestID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MenuSyncWebhookRequest) GetRequestIDOk() (*string, bool) {
	if o == nil || IsNil(o.RequestID) {
		return nil, false
	}
	return o.RequestID, true
}

// HasRequestID returns a boolean if a field has been set.
func (o *MenuSyncWebhookRequest) HasRequestID() bool {
	if o != nil && !IsNil(o.RequestID) {
		return true
	}

	return false
}

// SetRequestID gets a reference to the given string and assigns it to the RequestID field.
func (o *MenuSyncWebhookRequest) SetRequestID(v string) {
	o.RequestID = &v
}

// GetMerchantID returns the MerchantID field value if set, zero value otherwise.
func (o *MenuSyncWebhookRequest) GetMerchantID() string {
	if o == nil || IsNil(o.MerchantID) {
		var ret string
		return ret
	}
	return *o.MerchantID
}

// GetMerchantIDOk returns a tuple with the MerchantID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MenuSyncWebhookRequest) GetMerchantIDOk() (*string, bool) {
	if o == nil || IsNil(o.MerchantID) {
		return nil, false
	}
	return o.MerchantID, true
}

// HasMerchantID returns a boolean if a field has been set.
func (o *MenuSyncWebhookRequest) HasMerchantID() bool {
	if o != nil && !IsNil(o.MerchantID) {
		return true
	}

	return false
}

// SetMerchantID gets a reference to the given string and assigns it to the MerchantID field.
func (o *MenuSyncWebhookRequest) SetMerchantID(v string) {
	o.MerchantID = &v
}

// GetPartnerMerchantID returns the PartnerMerchantID field value if set, zero value otherwise.
func (o *MenuSyncWebhookRequest) GetPartnerMerchantID() string {
	if o == nil || IsNil(o.PartnerMerchantID) {
		var ret string
		return ret
	}
	return *o.PartnerMerchantID
}

// GetPartnerMerchantIDOk returns a tuple with the PartnerMerchantID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MenuSyncWebhookRequest) GetPartnerMerchantIDOk() (*string, bool) {
	if o == nil || IsNil(o.PartnerMerchantID) {
		return nil, false
	}
	return o.PartnerMerchantID, true
}

// HasPartnerMerchantID returns a boolean if a field has been set.
func (o *MenuSyncWebhookRequest) HasPartnerMerchantID() bool {
	if o != nil && !IsNil(o.PartnerMerchantID) {
		return true
	}

	return false
}

// SetPartnerMerchantID gets a reference to the given string and assigns it to the PartnerMerchantID field.
func (o *MenuSyncWebhookRequest) SetPartnerMerchantID(v string) {
	o.PartnerMerchantID = &v
}

// GetJobID returns the JobID field value if set, zero value otherwise.
func (o *MenuSyncWebhookRequest) GetJobID() string {
	if o == nil || IsNil(o.JobID) {
		var ret string
		return ret
	}
	return *o.JobID
}

// GetJobIDOk returns a tuple with the JobID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MenuSyncWebhookRequest) GetJobIDOk() (*string, bool) {
	if o == nil || IsNil(o.JobID) {
		return nil, false
	}
	return o.JobID, true
}

// HasJobID returns a boolean if a field has been set.
func (o *MenuSyncWebhookRequest) HasJobID() bool {
	if o != nil && !IsNil(o.JobID) {
		return true
	}

	return false
}

// SetJobID gets a reference to the given string and assigns it to the JobID field.
func (o *MenuSyncWebhookRequest) SetJobID(v string) {
	o.JobID = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *MenuSyncWebhookRequest) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MenuSyncWebhookRequest) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *MenuSyncWebhookRequest) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *MenuSyncWebhookRequest) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MenuSyncWebhookRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MenuSyncWebhookRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MenuSyncWebhookRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *MenuSyncWebhookRequest) SetStatus(v string) {
	o.Status = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *MenuSyncWebhookRequest) GetErrors() []string {
	if o == nil || IsNil(o.Errors) {
		var ret []string
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MenuSyncWebhookRequest) GetErrorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *MenuSyncWebhookRequest) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []string and assigns it to the Errors field.
func (o *MenuSyncWebhookRequest) SetErrors(v []string) {
	o.Errors = v
}

func (o MenuSyncWebhookRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MenuSyncWebhookRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RequestID) {
		toSerialize["requestID"] = o.RequestID
	}
	if !IsNil(o.MerchantID) {
		toSerialize["merchantID"] = o.MerchantID
	}
	if !IsNil(o.PartnerMerchantID) {
		toSerialize["partnerMerchantID"] = o.PartnerMerchantID
	}
	if !IsNil(o.JobID) {
		toSerialize["jobID"] = o.JobID
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MenuSyncWebhookRequest) UnmarshalJSON(data []byte) (err error) {
	varMenuSyncWebhookRequest := _MenuSyncWebhookRequest{}

	err = json.Unmarshal(data, &varMenuSyncWebhookRequest)

	if err != nil {
		return err
	}

	*o = MenuSyncWebhookRequest(varMenuSyncWebhookRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "requestID")
		delete(additionalProperties, "merchantID")
		delete(additionalProperties, "partnerMerchantID")
		delete(additionalProperties, "jobID")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "status")
		delete(additionalProperties, "errors")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMenuSyncWebhookRequest struct {
	value *MenuSyncWebhookRequest
	isSet bool
}

func (v NullableMenuSyncWebhookRequest) Get() *MenuSyncWebhookRequest {
	return v.value
}

func (v *NullableMenuSyncWebhookRequest) Set(val *MenuSyncWebhookRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMenuSyncWebhookRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMenuSyncWebhookRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMenuSyncWebhookRequest(val *MenuSyncWebhookRequest) *NullableMenuSyncWebhookRequest {
	return &NullableMenuSyncWebhookRequest{value: val, isSet: true}
}

func (v NullableMenuSyncWebhookRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMenuSyncWebhookRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


