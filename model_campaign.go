// Copyright 2024 Grabtaxi Holdings PTE LTE (GRAB), All rights reserved.
// Use of this source code is governed by an MIT-style license that can be found in the LICENSE file

/*
GrabFood

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grabfood

import (
	"encoding/json"
	"fmt"
)

// checks if the Campaign type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Campaign{}

// Campaign A JSON object containing the campaign details for a merchant. Only campaigns that are funded by merchants will be sent.
type Campaign struct {
	// The campaign's ID.
	Id string `json:"id"`
	// The party who created the campaign. Can be created by partners via API, merchants via the merchant app or Grab.
	CreatedBy string `json:"createdBy"`
	// The merchant's ID that is in GrabFood's database.
	MerchantID string `json:"merchantID"`
	// The campaign's name.
	Name string `json:"name"`
	Quotas *CampaignQuotas `json:"quotas,omitempty"`
	Conditions *CampaignConditions `json:"conditions,omitempty"`
	Discount *CampaignDiscount `json:"discount,omitempty"`
	// Specify the tag for custom bundle offer campaign. Only whitelisted partner is supported as of now.
	CustomTag *string `json:"customTag,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Campaign Campaign

// NewCampaign instantiates a new Campaign object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaign(id string, createdBy string, merchantID string, name string) *Campaign {
	this := Campaign{}
	this.Id = id
	this.CreatedBy = createdBy
	this.MerchantID = merchantID
	this.Name = name
	return &this
}

// NewCampaignWithDefaults instantiates a new Campaign object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignWithDefaults() *Campaign {
	this := Campaign{}
	return &this
}

// GetId returns the Id field value
func (o *Campaign) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Campaign) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Campaign) SetId(v string) {
	o.Id = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *Campaign) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *Campaign) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *Campaign) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetMerchantID returns the MerchantID field value
func (o *Campaign) GetMerchantID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantID
}

// GetMerchantIDOk returns a tuple with the MerchantID field value
// and a boolean to check if the value has been set.
func (o *Campaign) GetMerchantIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantID, true
}

// SetMerchantID sets field value
func (o *Campaign) SetMerchantID(v string) {
	o.MerchantID = v
}

// GetName returns the Name field value
func (o *Campaign) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Campaign) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Campaign) SetName(v string) {
	o.Name = v
}

// GetQuotas returns the Quotas field value if set, zero value otherwise.
func (o *Campaign) GetQuotas() CampaignQuotas {
	if o == nil || IsNil(o.Quotas) {
		var ret CampaignQuotas
		return ret
	}
	return *o.Quotas
}

// GetQuotasOk returns a tuple with the Quotas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Campaign) GetQuotasOk() (*CampaignQuotas, bool) {
	if o == nil || IsNil(o.Quotas) {
		return nil, false
	}
	return o.Quotas, true
}

// HasQuotas returns a boolean if a field has been set.
func (o *Campaign) HasQuotas() bool {
	if o != nil && !IsNil(o.Quotas) {
		return true
	}

	return false
}

// SetQuotas gets a reference to the given CampaignQuotas and assigns it to the Quotas field.
func (o *Campaign) SetQuotas(v CampaignQuotas) {
	o.Quotas = &v
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *Campaign) GetConditions() CampaignConditions {
	if o == nil || IsNil(o.Conditions) {
		var ret CampaignConditions
		return ret
	}
	return *o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Campaign) GetConditionsOk() (*CampaignConditions, bool) {
	if o == nil || IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *Campaign) HasConditions() bool {
	if o != nil && !IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given CampaignConditions and assigns it to the Conditions field.
func (o *Campaign) SetConditions(v CampaignConditions) {
	o.Conditions = &v
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *Campaign) GetDiscount() CampaignDiscount {
	if o == nil || IsNil(o.Discount) {
		var ret CampaignDiscount
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Campaign) GetDiscountOk() (*CampaignDiscount, bool) {
	if o == nil || IsNil(o.Discount) {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *Campaign) HasDiscount() bool {
	if o != nil && !IsNil(o.Discount) {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given CampaignDiscount and assigns it to the Discount field.
func (o *Campaign) SetDiscount(v CampaignDiscount) {
	o.Discount = &v
}

// GetCustomTag returns the CustomTag field value if set, zero value otherwise.
func (o *Campaign) GetCustomTag() string {
	if o == nil || IsNil(o.CustomTag) {
		var ret string
		return ret
	}
	return *o.CustomTag
}

// GetCustomTagOk returns a tuple with the CustomTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Campaign) GetCustomTagOk() (*string, bool) {
	if o == nil || IsNil(o.CustomTag) {
		return nil, false
	}
	return o.CustomTag, true
}

// HasCustomTag returns a boolean if a field has been set.
func (o *Campaign) HasCustomTag() bool {
	if o != nil && !IsNil(o.CustomTag) {
		return true
	}

	return false
}

// SetCustomTag gets a reference to the given string and assigns it to the CustomTag field.
func (o *Campaign) SetCustomTag(v string) {
	o.CustomTag = &v
}

func (o Campaign) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Campaign) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["createdBy"] = o.CreatedBy
	toSerialize["merchantID"] = o.MerchantID
	toSerialize["name"] = o.Name
	if !IsNil(o.Quotas) {
		toSerialize["quotas"] = o.Quotas
	}
	if !IsNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	if !IsNil(o.Discount) {
		toSerialize["discount"] = o.Discount
	}
	if !IsNil(o.CustomTag) {
		toSerialize["customTag"] = o.CustomTag
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Campaign) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"createdBy",
		"merchantID",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCampaign := _Campaign{}

	err = json.Unmarshal(data, &varCampaign)

	if err != nil {
		return err
	}

	*o = Campaign(varCampaign)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "createdBy")
		delete(additionalProperties, "merchantID")
		delete(additionalProperties, "name")
		delete(additionalProperties, "quotas")
		delete(additionalProperties, "conditions")
		delete(additionalProperties, "discount")
		delete(additionalProperties, "customTag")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCampaign struct {
	value *Campaign
	isSet bool
}

func (v NullableCampaign) Get() *Campaign {
	return v.value
}

func (v *NullableCampaign) Set(val *Campaign) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaign) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaign) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaign(val *Campaign) *NullableCampaign {
	return &NullableCampaign{value: val, isSet: true}
}

func (v NullableCampaign) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaign) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


