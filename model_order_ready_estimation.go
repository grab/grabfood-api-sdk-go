// Copyright 2024 Grabtaxi Holdings PTE LTE (GRAB), All rights reserved.
// Use of this source code is governed by an MIT-style license that can be found in the LICENSE file

/*
GrabFood

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grabfood

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the OrderReadyEstimation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderReadyEstimation{}

// OrderReadyEstimation Information related to the order ready time estimation.
type OrderReadyEstimation struct {
	// A boolean value indicating if the order ready time can be changed.
	AllowChange bool `json:"allowChange"`
	// The order ready time for this order estimated by GrabFood, based on ISO_8601/RFC3339.
	EstimatedOrderReadyTime time.Time `json:"estimatedOrderReadyTime"`
	// The max allowed order ready time for this order, based on ISO_8601/RFC3339.
	MaxOrderReadyTime time.Time `json:"maxOrderReadyTime"`
	// The new order ready time for this order. Only present after a new order ready time is set (default will be null), based on ISO_8601/RFC3339.
	NewOrderReadyTime NullableTime `json:"newOrderReadyTime,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OrderReadyEstimation OrderReadyEstimation

// NewOrderReadyEstimation instantiates a new OrderReadyEstimation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderReadyEstimation(allowChange bool, estimatedOrderReadyTime time.Time, maxOrderReadyTime time.Time) *OrderReadyEstimation {
	this := OrderReadyEstimation{}
	this.AllowChange = allowChange
	this.EstimatedOrderReadyTime = estimatedOrderReadyTime
	this.MaxOrderReadyTime = maxOrderReadyTime
	return &this
}

// NewOrderReadyEstimationWithDefaults instantiates a new OrderReadyEstimation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderReadyEstimationWithDefaults() *OrderReadyEstimation {
	this := OrderReadyEstimation{}
	return &this
}

// GetAllowChange returns the AllowChange field value
func (o *OrderReadyEstimation) GetAllowChange() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AllowChange
}

// GetAllowChangeOk returns a tuple with the AllowChange field value
// and a boolean to check if the value has been set.
func (o *OrderReadyEstimation) GetAllowChangeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllowChange, true
}

// SetAllowChange sets field value
func (o *OrderReadyEstimation) SetAllowChange(v bool) {
	o.AllowChange = v
}

// GetEstimatedOrderReadyTime returns the EstimatedOrderReadyTime field value
func (o *OrderReadyEstimation) GetEstimatedOrderReadyTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EstimatedOrderReadyTime
}

// GetEstimatedOrderReadyTimeOk returns a tuple with the EstimatedOrderReadyTime field value
// and a boolean to check if the value has been set.
func (o *OrderReadyEstimation) GetEstimatedOrderReadyTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EstimatedOrderReadyTime, true
}

// SetEstimatedOrderReadyTime sets field value
func (o *OrderReadyEstimation) SetEstimatedOrderReadyTime(v time.Time) {
	o.EstimatedOrderReadyTime = v
}

// GetMaxOrderReadyTime returns the MaxOrderReadyTime field value
func (o *OrderReadyEstimation) GetMaxOrderReadyTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.MaxOrderReadyTime
}

// GetMaxOrderReadyTimeOk returns a tuple with the MaxOrderReadyTime field value
// and a boolean to check if the value has been set.
func (o *OrderReadyEstimation) GetMaxOrderReadyTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxOrderReadyTime, true
}

// SetMaxOrderReadyTime sets field value
func (o *OrderReadyEstimation) SetMaxOrderReadyTime(v time.Time) {
	o.MaxOrderReadyTime = v
}

// GetNewOrderReadyTime returns the NewOrderReadyTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderReadyEstimation) GetNewOrderReadyTime() time.Time {
	if o == nil || IsNil(o.NewOrderReadyTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.NewOrderReadyTime.Get()
}

// GetNewOrderReadyTimeOk returns a tuple with the NewOrderReadyTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderReadyEstimation) GetNewOrderReadyTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.NewOrderReadyTime.Get(), o.NewOrderReadyTime.IsSet()
}

// HasNewOrderReadyTime returns a boolean if a field has been set.
func (o *OrderReadyEstimation) HasNewOrderReadyTime() bool {
	if o != nil && o.NewOrderReadyTime.IsSet() {
		return true
	}

	return false
}

// SetNewOrderReadyTime gets a reference to the given NullableTime and assigns it to the NewOrderReadyTime field.
func (o *OrderReadyEstimation) SetNewOrderReadyTime(v time.Time) {
	o.NewOrderReadyTime.Set(&v)
}
// SetNewOrderReadyTimeNil sets the value for NewOrderReadyTime to be an explicit nil
func (o *OrderReadyEstimation) SetNewOrderReadyTimeNil() {
	o.NewOrderReadyTime.Set(nil)
}

// UnsetNewOrderReadyTime ensures that no value is present for NewOrderReadyTime, not even an explicit nil
func (o *OrderReadyEstimation) UnsetNewOrderReadyTime() {
	o.NewOrderReadyTime.Unset()
}

func (o OrderReadyEstimation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderReadyEstimation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["allowChange"] = o.AllowChange
	toSerialize["estimatedOrderReadyTime"] = o.EstimatedOrderReadyTime
	toSerialize["maxOrderReadyTime"] = o.MaxOrderReadyTime
	if o.NewOrderReadyTime.IsSet() {
		toSerialize["newOrderReadyTime"] = o.NewOrderReadyTime.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrderReadyEstimation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"allowChange",
		"estimatedOrderReadyTime",
		"maxOrderReadyTime",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderReadyEstimation := _OrderReadyEstimation{}

	err = json.Unmarshal(data, &varOrderReadyEstimation)

	if err != nil {
		return err
	}

	*o = OrderReadyEstimation(varOrderReadyEstimation)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "allowChange")
		delete(additionalProperties, "estimatedOrderReadyTime")
		delete(additionalProperties, "maxOrderReadyTime")
		delete(additionalProperties, "newOrderReadyTime")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrderReadyEstimation struct {
	value *OrderReadyEstimation
	isSet bool
}

func (v NullableOrderReadyEstimation) Get() *OrderReadyEstimation {
	return v.value
}

func (v *NullableOrderReadyEstimation) Set(val *OrderReadyEstimation) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderReadyEstimation) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderReadyEstimation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderReadyEstimation(val *OrderReadyEstimation) *NullableOrderReadyEstimation {
	return &NullableOrderReadyEstimation{value: val, isSet: true}
}

func (v NullableOrderReadyEstimation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderReadyEstimation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


