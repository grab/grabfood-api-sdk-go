// Copyright 2024 Grabtaxi Holdings PTE LTE (GRAB), All rights reserved.
// Use of this source code is governed by an MIT-style license that can be found in the LICENSE file

/*
GrabFood

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grabfood

import (
	"encoding/json"
)

// checks if the SpecialOpeningHourMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpecialOpeningHourMetadata{}

// SpecialOpeningHourMetadata Contains special opening hour info.
type SpecialOpeningHourMetadata struct {
	// Description of the special opening hour.
	Description *string `json:"description,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SpecialOpeningHourMetadata SpecialOpeningHourMetadata

// NewSpecialOpeningHourMetadata instantiates a new SpecialOpeningHourMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpecialOpeningHourMetadata() *SpecialOpeningHourMetadata {
	this := SpecialOpeningHourMetadata{}
	return &this
}

// NewSpecialOpeningHourMetadataWithDefaults instantiates a new SpecialOpeningHourMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpecialOpeningHourMetadataWithDefaults() *SpecialOpeningHourMetadata {
	this := SpecialOpeningHourMetadata{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SpecialOpeningHourMetadata) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecialOpeningHourMetadata) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SpecialOpeningHourMetadata) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SpecialOpeningHourMetadata) SetDescription(v string) {
	o.Description = &v
}

func (o SpecialOpeningHourMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpecialOpeningHourMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SpecialOpeningHourMetadata) UnmarshalJSON(data []byte) (err error) {
	varSpecialOpeningHourMetadata := _SpecialOpeningHourMetadata{}

	err = json.Unmarshal(data, &varSpecialOpeningHourMetadata)

	if err != nil {
		return err
	}

	*o = SpecialOpeningHourMetadata(varSpecialOpeningHourMetadata)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSpecialOpeningHourMetadata struct {
	value *SpecialOpeningHourMetadata
	isSet bool
}

func (v NullableSpecialOpeningHourMetadata) Get() *SpecialOpeningHourMetadata {
	return v.value
}

func (v *NullableSpecialOpeningHourMetadata) Set(val *SpecialOpeningHourMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableSpecialOpeningHourMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableSpecialOpeningHourMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpecialOpeningHourMetadata(val *SpecialOpeningHourMetadata) *NullableSpecialOpeningHourMetadata {
	return &NullableSpecialOpeningHourMetadata{value: val, isSet: true}
}

func (v NullableSpecialOpeningHourMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpecialOpeningHourMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


