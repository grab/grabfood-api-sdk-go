// Copyright 2024 Grabtaxi Holdings PTE LTE (GRAB), All rights reserved.
// Use of this source code is governed by an MIT-style license that can be found in the LICENSE file

/*
GrabFood

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grabfood

import (
	"encoding/json"
)

// checks if the VoucherDescriptionInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoucherDescriptionInfo{}

// VoucherDescriptionInfo A JSON object containing dine-in voucher's description information.
type VoucherDescriptionInfo struct {
	// The description of the dine-in voucher.
	Text *string `json:"text,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VoucherDescriptionInfo VoucherDescriptionInfo

// NewVoucherDescriptionInfo instantiates a new VoucherDescriptionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoucherDescriptionInfo() *VoucherDescriptionInfo {
	this := VoucherDescriptionInfo{}
	return &this
}

// NewVoucherDescriptionInfoWithDefaults instantiates a new VoucherDescriptionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoucherDescriptionInfoWithDefaults() *VoucherDescriptionInfo {
	this := VoucherDescriptionInfo{}
	return &this
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *VoucherDescriptionInfo) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoucherDescriptionInfo) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *VoucherDescriptionInfo) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *VoucherDescriptionInfo) SetText(v string) {
	o.Text = &v
}

func (o VoucherDescriptionInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoucherDescriptionInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VoucherDescriptionInfo) UnmarshalJSON(data []byte) (err error) {
	varVoucherDescriptionInfo := _VoucherDescriptionInfo{}

	err = json.Unmarshal(data, &varVoucherDescriptionInfo)

	if err != nil {
		return err
	}

	*o = VoucherDescriptionInfo(varVoucherDescriptionInfo)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "text")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVoucherDescriptionInfo struct {
	value *VoucherDescriptionInfo
	isSet bool
}

func (v NullableVoucherDescriptionInfo) Get() *VoucherDescriptionInfo {
	return v.value
}

func (v *NullableVoucherDescriptionInfo) Set(val *VoucherDescriptionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVoucherDescriptionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVoucherDescriptionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoucherDescriptionInfo(val *VoucherDescriptionInfo) *NullableVoucherDescriptionInfo {
	return &NullableVoucherDescriptionInfo{value: val, isSet: true}
}

func (v NullableVoucherDescriptionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoucherDescriptionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


