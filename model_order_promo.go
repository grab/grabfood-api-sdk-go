// Copyright 2024 Grabtaxi Holdings PTE LTE (GRAB), All rights reserved.
// Use of this source code is governed by an MIT-style license that can be found in the LICENSE file

/*
GrabFood

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grabfood

import (
	"encoding/json"
)

// checks if the OrderPromo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderPromo{}

// OrderPromo struct for OrderPromo
type OrderPromo struct {
	// Promo code applied in the order.
	Code *string `json:"code,omitempty"`
	// Promo description.
	Description *string `json:"description,omitempty"`
	// Name of the promotion.
	Name *string `json:"name,omitempty"`
	// Promo amount applied in the order, in local currency. This amount is rounded into whole number.
	PromoAmount *int64 `json:"promoAmount,omitempty"`
	// The merchant's funded ratio of the promo in percentage.
	MexFundedRatio *int32 `json:"mexFundedRatio,omitempty"`
	// The merchant's promo fund in the minor unit. Calculated based on merchant funded ratio.
	MexFundedAmount *int64 `json:"mexFundedAmount,omitempty"`
	// The subtotal of the order basket in minor unit.
	TargetedPrice *int64 `json:"targetedPrice,omitempty"`
	// Promo amount applied in the order in minor unit.
	PromoAmountInMin *int64 `json:"promoAmountInMin,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OrderPromo OrderPromo

// NewOrderPromo instantiates a new OrderPromo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderPromo() *OrderPromo {
	this := OrderPromo{}
	return &this
}

// NewOrderPromoWithDefaults instantiates a new OrderPromo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderPromoWithDefaults() *OrderPromo {
	this := OrderPromo{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *OrderPromo) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderPromo) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *OrderPromo) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *OrderPromo) SetCode(v string) {
	o.Code = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OrderPromo) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderPromo) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OrderPromo) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OrderPromo) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrderPromo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderPromo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrderPromo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrderPromo) SetName(v string) {
	o.Name = &v
}

// GetPromoAmount returns the PromoAmount field value if set, zero value otherwise.
func (o *OrderPromo) GetPromoAmount() int64 {
	if o == nil || IsNil(o.PromoAmount) {
		var ret int64
		return ret
	}
	return *o.PromoAmount
}

// GetPromoAmountOk returns a tuple with the PromoAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderPromo) GetPromoAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.PromoAmount) {
		return nil, false
	}
	return o.PromoAmount, true
}

// HasPromoAmount returns a boolean if a field has been set.
func (o *OrderPromo) HasPromoAmount() bool {
	if o != nil && !IsNil(o.PromoAmount) {
		return true
	}

	return false
}

// SetPromoAmount gets a reference to the given int64 and assigns it to the PromoAmount field.
func (o *OrderPromo) SetPromoAmount(v int64) {
	o.PromoAmount = &v
}

// GetMexFundedRatio returns the MexFundedRatio field value if set, zero value otherwise.
func (o *OrderPromo) GetMexFundedRatio() int32 {
	if o == nil || IsNil(o.MexFundedRatio) {
		var ret int32
		return ret
	}
	return *o.MexFundedRatio
}

// GetMexFundedRatioOk returns a tuple with the MexFundedRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderPromo) GetMexFundedRatioOk() (*int32, bool) {
	if o == nil || IsNil(o.MexFundedRatio) {
		return nil, false
	}
	return o.MexFundedRatio, true
}

// HasMexFundedRatio returns a boolean if a field has been set.
func (o *OrderPromo) HasMexFundedRatio() bool {
	if o != nil && !IsNil(o.MexFundedRatio) {
		return true
	}

	return false
}

// SetMexFundedRatio gets a reference to the given int32 and assigns it to the MexFundedRatio field.
func (o *OrderPromo) SetMexFundedRatio(v int32) {
	o.MexFundedRatio = &v
}

// GetMexFundedAmount returns the MexFundedAmount field value if set, zero value otherwise.
func (o *OrderPromo) GetMexFundedAmount() int64 {
	if o == nil || IsNil(o.MexFundedAmount) {
		var ret int64
		return ret
	}
	return *o.MexFundedAmount
}

// GetMexFundedAmountOk returns a tuple with the MexFundedAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderPromo) GetMexFundedAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.MexFundedAmount) {
		return nil, false
	}
	return o.MexFundedAmount, true
}

// HasMexFundedAmount returns a boolean if a field has been set.
func (o *OrderPromo) HasMexFundedAmount() bool {
	if o != nil && !IsNil(o.MexFundedAmount) {
		return true
	}

	return false
}

// SetMexFundedAmount gets a reference to the given int64 and assigns it to the MexFundedAmount field.
func (o *OrderPromo) SetMexFundedAmount(v int64) {
	o.MexFundedAmount = &v
}

// GetTargetedPrice returns the TargetedPrice field value if set, zero value otherwise.
func (o *OrderPromo) GetTargetedPrice() int64 {
	if o == nil || IsNil(o.TargetedPrice) {
		var ret int64
		return ret
	}
	return *o.TargetedPrice
}

// GetTargetedPriceOk returns a tuple with the TargetedPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderPromo) GetTargetedPriceOk() (*int64, bool) {
	if o == nil || IsNil(o.TargetedPrice) {
		return nil, false
	}
	return o.TargetedPrice, true
}

// HasTargetedPrice returns a boolean if a field has been set.
func (o *OrderPromo) HasTargetedPrice() bool {
	if o != nil && !IsNil(o.TargetedPrice) {
		return true
	}

	return false
}

// SetTargetedPrice gets a reference to the given int64 and assigns it to the TargetedPrice field.
func (o *OrderPromo) SetTargetedPrice(v int64) {
	o.TargetedPrice = &v
}

// GetPromoAmountInMin returns the PromoAmountInMin field value if set, zero value otherwise.
func (o *OrderPromo) GetPromoAmountInMin() int64 {
	if o == nil || IsNil(o.PromoAmountInMin) {
		var ret int64
		return ret
	}
	return *o.PromoAmountInMin
}

// GetPromoAmountInMinOk returns a tuple with the PromoAmountInMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderPromo) GetPromoAmountInMinOk() (*int64, bool) {
	if o == nil || IsNil(o.PromoAmountInMin) {
		return nil, false
	}
	return o.PromoAmountInMin, true
}

// HasPromoAmountInMin returns a boolean if a field has been set.
func (o *OrderPromo) HasPromoAmountInMin() bool {
	if o != nil && !IsNil(o.PromoAmountInMin) {
		return true
	}

	return false
}

// SetPromoAmountInMin gets a reference to the given int64 and assigns it to the PromoAmountInMin field.
func (o *OrderPromo) SetPromoAmountInMin(v int64) {
	o.PromoAmountInMin = &v
}

func (o OrderPromo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderPromo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PromoAmount) {
		toSerialize["promoAmount"] = o.PromoAmount
	}
	if !IsNil(o.MexFundedRatio) {
		toSerialize["mexFundedRatio"] = o.MexFundedRatio
	}
	if !IsNil(o.MexFundedAmount) {
		toSerialize["mexFundedAmount"] = o.MexFundedAmount
	}
	if !IsNil(o.TargetedPrice) {
		toSerialize["targetedPrice"] = o.TargetedPrice
	}
	if !IsNil(o.PromoAmountInMin) {
		toSerialize["promoAmountInMin"] = o.PromoAmountInMin
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrderPromo) UnmarshalJSON(data []byte) (err error) {
	varOrderPromo := _OrderPromo{}

	err = json.Unmarshal(data, &varOrderPromo)

	if err != nil {
		return err
	}

	*o = OrderPromo(varOrderPromo)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "code")
		delete(additionalProperties, "description")
		delete(additionalProperties, "name")
		delete(additionalProperties, "promoAmount")
		delete(additionalProperties, "mexFundedRatio")
		delete(additionalProperties, "mexFundedAmount")
		delete(additionalProperties, "targetedPrice")
		delete(additionalProperties, "promoAmountInMin")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrderPromo struct {
	value *OrderPromo
	isSet bool
}

func (v NullableOrderPromo) Get() *OrderPromo {
	return v.value
}

func (v *NullableOrderPromo) Set(val *OrderPromo) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderPromo) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderPromo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderPromo(val *OrderPromo) *NullableOrderPromo {
	return &NullableOrderPromo{value: val, isSet: true}
}

func (v NullableOrderPromo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderPromo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


