// Copyright 2024 Grabtaxi Holdings PTE LTE (GRAB), All rights reserved.
// Use of this source code is governed by an MIT-style license that can be found in the LICENSE file

/*
GrabFood

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grabfood

import (
	"encoding/json"
)

// checks if the WorkingHourDay type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkingHourDay{}

// WorkingHourDay A JSON object for workingHour for a day.
type WorkingHourDay struct {
	// An array of open periods. `null` in [ListCampaign](#tag/list-campaign) response if the campaign is available all day.
	Periods []OpenPeriod `json:"periods,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WorkingHourDay WorkingHourDay

// NewWorkingHourDay instantiates a new WorkingHourDay object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkingHourDay() *WorkingHourDay {
	this := WorkingHourDay{}
	return &this
}

// NewWorkingHourDayWithDefaults instantiates a new WorkingHourDay object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkingHourDayWithDefaults() *WorkingHourDay {
	this := WorkingHourDay{}
	return &this
}

// GetPeriods returns the Periods field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkingHourDay) GetPeriods() []OpenPeriod {
	if o == nil {
		var ret []OpenPeriod
		return ret
	}
	return o.Periods
}

// GetPeriodsOk returns a tuple with the Periods field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkingHourDay) GetPeriodsOk() ([]OpenPeriod, bool) {
	if o == nil || IsNil(o.Periods) {
		return nil, false
	}
	return o.Periods, true
}

// HasPeriods returns a boolean if a field has been set.
func (o *WorkingHourDay) HasPeriods() bool {
	if o != nil && !IsNil(o.Periods) {
		return true
	}

	return false
}

// SetPeriods gets a reference to the given []OpenPeriod and assigns it to the Periods field.
func (o *WorkingHourDay) SetPeriods(v []OpenPeriod) {
	o.Periods = v
}

func (o WorkingHourDay) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkingHourDay) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Periods != nil {
		toSerialize["periods"] = o.Periods
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WorkingHourDay) UnmarshalJSON(data []byte) (err error) {
	varWorkingHourDay := _WorkingHourDay{}

	err = json.Unmarshal(data, &varWorkingHourDay)

	if err != nil {
		return err
	}

	*o = WorkingHourDay(varWorkingHourDay)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "periods")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWorkingHourDay struct {
	value *WorkingHourDay
	isSet bool
}

func (v NullableWorkingHourDay) Get() *WorkingHourDay {
	return v.value
}

func (v *NullableWorkingHourDay) Set(val *WorkingHourDay) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkingHourDay) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkingHourDay) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkingHourDay(val *WorkingHourDay) *NullableWorkingHourDay {
	return &NullableWorkingHourDay{value: val, isSet: true}
}

func (v NullableWorkingHourDay) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkingHourDay) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


