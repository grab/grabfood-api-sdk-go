// Copyright 2024 Grabtaxi Holdings PTE LTE (GRAB), All rights reserved.
// Use of this source code is governed by an MIT-style license that can be found in the LICENSE file

/*
GrabFood

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grabfood

import (
	"encoding/json"
)

// checks if the StoreHourResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StoreHourResponse{}

// StoreHourResponse Object contain store hour info
type StoreHourResponse struct {
	DineInHour *StoreHour `json:"dineInHour,omitempty"`
	OpeningHour *StoreHour `json:"openingHour,omitempty"`
	// The store's special opening hours.
	SpecialOpeningHours []SpecialOpeningHour `json:"specialOpeningHours,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _StoreHourResponse StoreHourResponse

// NewStoreHourResponse instantiates a new StoreHourResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStoreHourResponse() *StoreHourResponse {
	this := StoreHourResponse{}
	return &this
}

// NewStoreHourResponseWithDefaults instantiates a new StoreHourResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStoreHourResponseWithDefaults() *StoreHourResponse {
	this := StoreHourResponse{}
	return &this
}

// GetDineInHour returns the DineInHour field value if set, zero value otherwise.
func (o *StoreHourResponse) GetDineInHour() StoreHour {
	if o == nil || IsNil(o.DineInHour) {
		var ret StoreHour
		return ret
	}
	return *o.DineInHour
}

// GetDineInHourOk returns a tuple with the DineInHour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoreHourResponse) GetDineInHourOk() (*StoreHour, bool) {
	if o == nil || IsNil(o.DineInHour) {
		return nil, false
	}
	return o.DineInHour, true
}

// HasDineInHour returns a boolean if a field has been set.
func (o *StoreHourResponse) HasDineInHour() bool {
	if o != nil && !IsNil(o.DineInHour) {
		return true
	}

	return false
}

// SetDineInHour gets a reference to the given StoreHour and assigns it to the DineInHour field.
func (o *StoreHourResponse) SetDineInHour(v StoreHour) {
	o.DineInHour = &v
}

// GetOpeningHour returns the OpeningHour field value if set, zero value otherwise.
func (o *StoreHourResponse) GetOpeningHour() StoreHour {
	if o == nil || IsNil(o.OpeningHour) {
		var ret StoreHour
		return ret
	}
	return *o.OpeningHour
}

// GetOpeningHourOk returns a tuple with the OpeningHour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoreHourResponse) GetOpeningHourOk() (*StoreHour, bool) {
	if o == nil || IsNil(o.OpeningHour) {
		return nil, false
	}
	return o.OpeningHour, true
}

// HasOpeningHour returns a boolean if a field has been set.
func (o *StoreHourResponse) HasOpeningHour() bool {
	if o != nil && !IsNil(o.OpeningHour) {
		return true
	}

	return false
}

// SetOpeningHour gets a reference to the given StoreHour and assigns it to the OpeningHour field.
func (o *StoreHourResponse) SetOpeningHour(v StoreHour) {
	o.OpeningHour = &v
}

// GetSpecialOpeningHours returns the SpecialOpeningHours field value if set, zero value otherwise.
func (o *StoreHourResponse) GetSpecialOpeningHours() []SpecialOpeningHour {
	if o == nil || IsNil(o.SpecialOpeningHours) {
		var ret []SpecialOpeningHour
		return ret
	}
	return o.SpecialOpeningHours
}

// GetSpecialOpeningHoursOk returns a tuple with the SpecialOpeningHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoreHourResponse) GetSpecialOpeningHoursOk() ([]SpecialOpeningHour, bool) {
	if o == nil || IsNil(o.SpecialOpeningHours) {
		return nil, false
	}
	return o.SpecialOpeningHours, true
}

// HasSpecialOpeningHours returns a boolean if a field has been set.
func (o *StoreHourResponse) HasSpecialOpeningHours() bool {
	if o != nil && !IsNil(o.SpecialOpeningHours) {
		return true
	}

	return false
}

// SetSpecialOpeningHours gets a reference to the given []SpecialOpeningHour and assigns it to the SpecialOpeningHours field.
func (o *StoreHourResponse) SetSpecialOpeningHours(v []SpecialOpeningHour) {
	o.SpecialOpeningHours = v
}

func (o StoreHourResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StoreHourResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DineInHour) {
		toSerialize["dineInHour"] = o.DineInHour
	}
	if !IsNil(o.OpeningHour) {
		toSerialize["openingHour"] = o.OpeningHour
	}
	if !IsNil(o.SpecialOpeningHours) {
		toSerialize["specialOpeningHours"] = o.SpecialOpeningHours
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *StoreHourResponse) UnmarshalJSON(data []byte) (err error) {
	varStoreHourResponse := _StoreHourResponse{}

	err = json.Unmarshal(data, &varStoreHourResponse)

	if err != nil {
		return err
	}

	*o = StoreHourResponse(varStoreHourResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "dineInHour")
		delete(additionalProperties, "openingHour")
		delete(additionalProperties, "specialOpeningHours")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStoreHourResponse struct {
	value *StoreHourResponse
	isSet bool
}

func (v NullableStoreHourResponse) Get() *StoreHourResponse {
	return v.value
}

func (v *NullableStoreHourResponse) Set(val *StoreHourResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableStoreHourResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableStoreHourResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStoreHourResponse(val *StoreHourResponse) *NullableStoreHourResponse {
	return &NullableStoreHourResponse{value: val, isSet: true}
}

func (v NullableStoreHourResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStoreHourResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


