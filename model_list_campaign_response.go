// Copyright 2024 Grabtaxi Holdings PTE LTE (GRAB), All rights reserved.
// Use of this source code is governed by an MIT-style license that can be found in the LICENSE file

/*
GrabFood

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grabfood

import (
	"encoding/json"
)

// checks if the ListCampaignResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListCampaignResponse{}

// ListCampaignResponse 
type ListCampaignResponse struct {
	Ongoing []Campaign `json:"ongoing,omitempty"`
	Upcoming []Campaign `json:"upcoming,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListCampaignResponse ListCampaignResponse

// NewListCampaignResponse instantiates a new ListCampaignResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListCampaignResponse() *ListCampaignResponse {
	this := ListCampaignResponse{}
	return &this
}

// NewListCampaignResponseWithDefaults instantiates a new ListCampaignResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListCampaignResponseWithDefaults() *ListCampaignResponse {
	this := ListCampaignResponse{}
	return &this
}

// GetOngoing returns the Ongoing field value if set, zero value otherwise.
func (o *ListCampaignResponse) GetOngoing() []Campaign {
	if o == nil || IsNil(o.Ongoing) {
		var ret []Campaign
		return ret
	}
	return o.Ongoing
}

// GetOngoingOk returns a tuple with the Ongoing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCampaignResponse) GetOngoingOk() ([]Campaign, bool) {
	if o == nil || IsNil(o.Ongoing) {
		return nil, false
	}
	return o.Ongoing, true
}

// HasOngoing returns a boolean if a field has been set.
func (o *ListCampaignResponse) HasOngoing() bool {
	if o != nil && !IsNil(o.Ongoing) {
		return true
	}

	return false
}

// SetOngoing gets a reference to the given []Campaign and assigns it to the Ongoing field.
func (o *ListCampaignResponse) SetOngoing(v []Campaign) {
	o.Ongoing = v
}

// GetUpcoming returns the Upcoming field value if set, zero value otherwise.
func (o *ListCampaignResponse) GetUpcoming() []Campaign {
	if o == nil || IsNil(o.Upcoming) {
		var ret []Campaign
		return ret
	}
	return o.Upcoming
}

// GetUpcomingOk returns a tuple with the Upcoming field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCampaignResponse) GetUpcomingOk() ([]Campaign, bool) {
	if o == nil || IsNil(o.Upcoming) {
		return nil, false
	}
	return o.Upcoming, true
}

// HasUpcoming returns a boolean if a field has been set.
func (o *ListCampaignResponse) HasUpcoming() bool {
	if o != nil && !IsNil(o.Upcoming) {
		return true
	}

	return false
}

// SetUpcoming gets a reference to the given []Campaign and assigns it to the Upcoming field.
func (o *ListCampaignResponse) SetUpcoming(v []Campaign) {
	o.Upcoming = v
}

func (o ListCampaignResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListCampaignResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ongoing) {
		toSerialize["ongoing"] = o.Ongoing
	}
	if !IsNil(o.Upcoming) {
		toSerialize["upcoming"] = o.Upcoming
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListCampaignResponse) UnmarshalJSON(data []byte) (err error) {
	varListCampaignResponse := _ListCampaignResponse{}

	err = json.Unmarshal(data, &varListCampaignResponse)

	if err != nil {
		return err
	}

	*o = ListCampaignResponse(varListCampaignResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ongoing")
		delete(additionalProperties, "upcoming")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListCampaignResponse struct {
	value *ListCampaignResponse
	isSet bool
}

func (v NullableListCampaignResponse) Get() *ListCampaignResponse {
	return v.value
}

func (v *NullableListCampaignResponse) Set(val *ListCampaignResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListCampaignResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListCampaignResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListCampaignResponse(val *ListCampaignResponse) *NullableListCampaignResponse {
	return &NullableListCampaignResponse{value: val, isSet: true}
}

func (v NullableListCampaignResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListCampaignResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


