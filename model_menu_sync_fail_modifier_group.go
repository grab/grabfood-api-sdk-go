// Copyright 2024 Grabtaxi Holdings PTE LTE (GRAB), All rights reserved.
// Use of this source code is governed by an MIT-style license that can be found in the LICENSE file

/*
GrabFood

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grabfood

import (
	"encoding/json"
)

// checks if the MenuSyncFailModifierGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MenuSyncFailModifierGroup{}

// MenuSyncFailModifierGroup struct for MenuSyncFailModifierGroup
type MenuSyncFailModifierGroup struct {
	Id *string `json:"id,omitempty"`
	// An array of strings of error message.
	Errors []string `json:"errors,omitempty"`
	Modifiers []MenuSyncFailModifier `json:"modifiers,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MenuSyncFailModifierGroup MenuSyncFailModifierGroup

// NewMenuSyncFailModifierGroup instantiates a new MenuSyncFailModifierGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMenuSyncFailModifierGroup() *MenuSyncFailModifierGroup {
	this := MenuSyncFailModifierGroup{}
	return &this
}

// NewMenuSyncFailModifierGroupWithDefaults instantiates a new MenuSyncFailModifierGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMenuSyncFailModifierGroupWithDefaults() *MenuSyncFailModifierGroup {
	this := MenuSyncFailModifierGroup{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MenuSyncFailModifierGroup) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MenuSyncFailModifierGroup) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MenuSyncFailModifierGroup) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MenuSyncFailModifierGroup) SetId(v string) {
	o.Id = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *MenuSyncFailModifierGroup) GetErrors() []string {
	if o == nil || IsNil(o.Errors) {
		var ret []string
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MenuSyncFailModifierGroup) GetErrorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *MenuSyncFailModifierGroup) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []string and assigns it to the Errors field.
func (o *MenuSyncFailModifierGroup) SetErrors(v []string) {
	o.Errors = v
}

// GetModifiers returns the Modifiers field value if set, zero value otherwise.
func (o *MenuSyncFailModifierGroup) GetModifiers() []MenuSyncFailModifier {
	if o == nil || IsNil(o.Modifiers) {
		var ret []MenuSyncFailModifier
		return ret
	}
	return o.Modifiers
}

// GetModifiersOk returns a tuple with the Modifiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MenuSyncFailModifierGroup) GetModifiersOk() ([]MenuSyncFailModifier, bool) {
	if o == nil || IsNil(o.Modifiers) {
		return nil, false
	}
	return o.Modifiers, true
}

// HasModifiers returns a boolean if a field has been set.
func (o *MenuSyncFailModifierGroup) HasModifiers() bool {
	if o != nil && !IsNil(o.Modifiers) {
		return true
	}

	return false
}

// SetModifiers gets a reference to the given []MenuSyncFailModifier and assigns it to the Modifiers field.
func (o *MenuSyncFailModifierGroup) SetModifiers(v []MenuSyncFailModifier) {
	o.Modifiers = v
}

func (o MenuSyncFailModifierGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MenuSyncFailModifierGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.Modifiers) {
		toSerialize["modifiers"] = o.Modifiers
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MenuSyncFailModifierGroup) UnmarshalJSON(data []byte) (err error) {
	varMenuSyncFailModifierGroup := _MenuSyncFailModifierGroup{}

	err = json.Unmarshal(data, &varMenuSyncFailModifierGroup)

	if err != nil {
		return err
	}

	*o = MenuSyncFailModifierGroup(varMenuSyncFailModifierGroup)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "errors")
		delete(additionalProperties, "modifiers")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMenuSyncFailModifierGroup struct {
	value *MenuSyncFailModifierGroup
	isSet bool
}

func (v NullableMenuSyncFailModifierGroup) Get() *MenuSyncFailModifierGroup {
	return v.value
}

func (v *NullableMenuSyncFailModifierGroup) Set(val *MenuSyncFailModifierGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableMenuSyncFailModifierGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableMenuSyncFailModifierGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMenuSyncFailModifierGroup(val *MenuSyncFailModifierGroup) *NullableMenuSyncFailModifierGroup {
	return &NullableMenuSyncFailModifierGroup{value: val, isSet: true}
}

func (v NullableMenuSyncFailModifierGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMenuSyncFailModifierGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


