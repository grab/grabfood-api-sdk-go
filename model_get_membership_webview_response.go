// Copyright 2024 Grabtaxi Holdings PTE LTE (GRAB), All rights reserved.
// Use of this source code is governed by an MIT-style license that can be found in the LICENSE file

/*
GrabFood

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grabfood

import (
	"encoding/json"
)

// checks if the GetMembershipWebviewResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMembershipWebviewResponse{}

// GetMembershipWebviewResponse This response returns membership detail. 
type GetMembershipWebviewResponse struct {
	// Status of the memberID.
	MembershipStatus *string `json:"membershipStatus,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetMembershipWebviewResponse GetMembershipWebviewResponse

// NewGetMembershipWebviewResponse instantiates a new GetMembershipWebviewResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMembershipWebviewResponse() *GetMembershipWebviewResponse {
	this := GetMembershipWebviewResponse{}
	return &this
}

// NewGetMembershipWebviewResponseWithDefaults instantiates a new GetMembershipWebviewResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMembershipWebviewResponseWithDefaults() *GetMembershipWebviewResponse {
	this := GetMembershipWebviewResponse{}
	return &this
}

// GetMembershipStatus returns the MembershipStatus field value if set, zero value otherwise.
func (o *GetMembershipWebviewResponse) GetMembershipStatus() string {
	if o == nil || IsNil(o.MembershipStatus) {
		var ret string
		return ret
	}
	return *o.MembershipStatus
}

// GetMembershipStatusOk returns a tuple with the MembershipStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMembershipWebviewResponse) GetMembershipStatusOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipStatus) {
		return nil, false
	}
	return o.MembershipStatus, true
}

// HasMembershipStatus returns a boolean if a field has been set.
func (o *GetMembershipWebviewResponse) HasMembershipStatus() bool {
	if o != nil && !IsNil(o.MembershipStatus) {
		return true
	}

	return false
}

// SetMembershipStatus gets a reference to the given string and assigns it to the MembershipStatus field.
func (o *GetMembershipWebviewResponse) SetMembershipStatus(v string) {
	o.MembershipStatus = &v
}

func (o GetMembershipWebviewResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMembershipWebviewResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MembershipStatus) {
		toSerialize["membershipStatus"] = o.MembershipStatus
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetMembershipWebviewResponse) UnmarshalJSON(data []byte) (err error) {
	varGetMembershipWebviewResponse := _GetMembershipWebviewResponse{}

	err = json.Unmarshal(data, &varGetMembershipWebviewResponse)

	if err != nil {
		return err
	}

	*o = GetMembershipWebviewResponse(varGetMembershipWebviewResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "membershipStatus")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetMembershipWebviewResponse struct {
	value *GetMembershipWebviewResponse
	isSet bool
}

func (v NullableGetMembershipWebviewResponse) Get() *GetMembershipWebviewResponse {
	return v.value
}

func (v *NullableGetMembershipWebviewResponse) Set(val *GetMembershipWebviewResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMembershipWebviewResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMembershipWebviewResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMembershipWebviewResponse(val *GetMembershipWebviewResponse) *NullableGetMembershipWebviewResponse {
	return &NullableGetMembershipWebviewResponse{value: val, isSet: true}
}

func (v NullableGetMembershipWebviewResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMembershipWebviewResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


