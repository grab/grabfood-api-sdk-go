// Copyright 2024 Grabtaxi Holdings PTE LTE (GRAB), All rights reserved.
// Use of this source code is governed by an MIT-style license that can be found in the LICENSE file

/*
GrabFood

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package grabfood

import (
	"encoding/json"
)

// checks if the GetMembershipNativeResponsePointInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMembershipNativeResponsePointInfo{}

// GetMembershipNativeResponsePointInfo Obtain contains user's point details.
type GetMembershipNativeResponsePointInfo struct {
	// Point that user currently obtained.
	CurrentPoints *int64 `json:"currentPoints,omitempty"`
	// Maximum point that user can obtain.
	MaxPoints *int64 `json:"maxPoints,omitempty"`
	// Points that would get expired in future.
	ExpirePoints *int64 `json:"expirePoints,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetMembershipNativeResponsePointInfo GetMembershipNativeResponsePointInfo

// NewGetMembershipNativeResponsePointInfo instantiates a new GetMembershipNativeResponsePointInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMembershipNativeResponsePointInfo() *GetMembershipNativeResponsePointInfo {
	this := GetMembershipNativeResponsePointInfo{}
	return &this
}

// NewGetMembershipNativeResponsePointInfoWithDefaults instantiates a new GetMembershipNativeResponsePointInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMembershipNativeResponsePointInfoWithDefaults() *GetMembershipNativeResponsePointInfo {
	this := GetMembershipNativeResponsePointInfo{}
	return &this
}

// GetCurrentPoints returns the CurrentPoints field value if set, zero value otherwise.
func (o *GetMembershipNativeResponsePointInfo) GetCurrentPoints() int64 {
	if o == nil || IsNil(o.CurrentPoints) {
		var ret int64
		return ret
	}
	return *o.CurrentPoints
}

// GetCurrentPointsOk returns a tuple with the CurrentPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMembershipNativeResponsePointInfo) GetCurrentPointsOk() (*int64, bool) {
	if o == nil || IsNil(o.CurrentPoints) {
		return nil, false
	}
	return o.CurrentPoints, true
}

// HasCurrentPoints returns a boolean if a field has been set.
func (o *GetMembershipNativeResponsePointInfo) HasCurrentPoints() bool {
	if o != nil && !IsNil(o.CurrentPoints) {
		return true
	}

	return false
}

// SetCurrentPoints gets a reference to the given int64 and assigns it to the CurrentPoints field.
func (o *GetMembershipNativeResponsePointInfo) SetCurrentPoints(v int64) {
	o.CurrentPoints = &v
}

// GetMaxPoints returns the MaxPoints field value if set, zero value otherwise.
func (o *GetMembershipNativeResponsePointInfo) GetMaxPoints() int64 {
	if o == nil || IsNil(o.MaxPoints) {
		var ret int64
		return ret
	}
	return *o.MaxPoints
}

// GetMaxPointsOk returns a tuple with the MaxPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMembershipNativeResponsePointInfo) GetMaxPointsOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxPoints) {
		return nil, false
	}
	return o.MaxPoints, true
}

// HasMaxPoints returns a boolean if a field has been set.
func (o *GetMembershipNativeResponsePointInfo) HasMaxPoints() bool {
	if o != nil && !IsNil(o.MaxPoints) {
		return true
	}

	return false
}

// SetMaxPoints gets a reference to the given int64 and assigns it to the MaxPoints field.
func (o *GetMembershipNativeResponsePointInfo) SetMaxPoints(v int64) {
	o.MaxPoints = &v
}

// GetExpirePoints returns the ExpirePoints field value if set, zero value otherwise.
func (o *GetMembershipNativeResponsePointInfo) GetExpirePoints() int64 {
	if o == nil || IsNil(o.ExpirePoints) {
		var ret int64
		return ret
	}
	return *o.ExpirePoints
}

// GetExpirePointsOk returns a tuple with the ExpirePoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMembershipNativeResponsePointInfo) GetExpirePointsOk() (*int64, bool) {
	if o == nil || IsNil(o.ExpirePoints) {
		return nil, false
	}
	return o.ExpirePoints, true
}

// HasExpirePoints returns a boolean if a field has been set.
func (o *GetMembershipNativeResponsePointInfo) HasExpirePoints() bool {
	if o != nil && !IsNil(o.ExpirePoints) {
		return true
	}

	return false
}

// SetExpirePoints gets a reference to the given int64 and assigns it to the ExpirePoints field.
func (o *GetMembershipNativeResponsePointInfo) SetExpirePoints(v int64) {
	o.ExpirePoints = &v
}

func (o GetMembershipNativeResponsePointInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMembershipNativeResponsePointInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrentPoints) {
		toSerialize["currentPoints"] = o.CurrentPoints
	}
	if !IsNil(o.MaxPoints) {
		toSerialize["maxPoints"] = o.MaxPoints
	}
	if !IsNil(o.ExpirePoints) {
		toSerialize["expirePoints"] = o.ExpirePoints
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetMembershipNativeResponsePointInfo) UnmarshalJSON(data []byte) (err error) {
	varGetMembershipNativeResponsePointInfo := _GetMembershipNativeResponsePointInfo{}

	err = json.Unmarshal(data, &varGetMembershipNativeResponsePointInfo)

	if err != nil {
		return err
	}

	*o = GetMembershipNativeResponsePointInfo(varGetMembershipNativeResponsePointInfo)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "currentPoints")
		delete(additionalProperties, "maxPoints")
		delete(additionalProperties, "expirePoints")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetMembershipNativeResponsePointInfo struct {
	value *GetMembershipNativeResponsePointInfo
	isSet bool
}

func (v NullableGetMembershipNativeResponsePointInfo) Get() *GetMembershipNativeResponsePointInfo {
	return v.value
}

func (v *NullableGetMembershipNativeResponsePointInfo) Set(val *GetMembershipNativeResponsePointInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMembershipNativeResponsePointInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMembershipNativeResponsePointInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMembershipNativeResponsePointInfo(val *GetMembershipNativeResponsePointInfo) *NullableGetMembershipNativeResponsePointInfo {
	return &NullableGetMembershipNativeResponsePointInfo{value: val, isSet: true}
}

func (v NullableGetMembershipNativeResponsePointInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMembershipNativeResponsePointInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


